{"version":3,"sources":["ng://@sedeh/flexible-tabs/src/app/flexible-tabs/flexible.tabs.component.ts","ng://@sedeh/flexible-tabs/src/app/flexible-tabs/flexible-tabs-module.ts"],"names":["button","tab","plain","icon","radio","top","left","right","bottom","FlexibleTabComponent","componentFactoryResolver","appRef","injector","host","detector","this","prototype","templateContext","data","sourceData","dynamicallyLoadedComponent","component","selected","initializeDynamicComponent","instance","dynamicComponent","nativeElement","append","rootNodes","innerHTML","resolveComponentFactory","create","attachView","hostView","Component","args","selector","template","ComponentFactoryResolver","ApplicationRef","Injector","ElementRef","ChangeDetectorRef","Input","FlexibleTabsComponent","TabPositions","TabTypes","EventEmitter","ngAfterContentInit","_this","tabs","selectedIndex","pophover","isIconified","children","forEach","tabInstance","index","tabicon","tabalticon","push","length","selectTab","keyup","event","which","target","click","map","hovered","detectChanges","popped","onchange","emit","selectedTitle","title","hoverTab","flag","ContentChildren","Output","FlexibleTabsModule","NgModule","imports","CommonModule","declarations","exports","entryComponents","providers","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["/*\r\n* Provides rendering of a table which is using the given FlexibleTableHeader set in\r\n* order to tabulate the given data. As per definition of earch header component,\r\n* a column could be hidden, sortable, or draggable. Each table row can expand/collapse\r\n* or respond to a click action.\r\n*/\r\nimport {\r\n    Component,\r\n\tInput,\r\n\tOutput,\r\n\tContentChildren,\r\n\tQueryList,\r\n\tAfterContentInit,\r\n\tChangeDetectorRef,\r\n\tInjector,\r\n\tComponentFactoryResolver,\r\n\tEmbeddedViewRef,\r\n\tElementRef,\r\n    ApplicationRef,\r\n\tEventEmitter\r\n} from '@angular/core';\r\n\r\nexport enum TabTypes {\r\n\tbutton = \"button\", \r\n\ttab = \"tab\", \r\n\tplain = \"plain\", \r\n\ticon = \"icon\", \r\n\tradio = \"radio\"\r\n}\r\n\r\nexport enum TabPositions {\r\n\ttop = \"top\", \r\n\tleft = \"left\", \r\n\tright = \"right\", \r\n\tbottom = \"bottom\"\r\n}\r\n\r\nexport interface DynamicTabContentComponent {\r\n\tdata: any;\r\n}\r\n\r\n@Component({\r\n\tselector: 'flexible-tab',\r\n\ttemplateUrl: './flexible.tab.component.html',\r\n\tstyleUrls: ['./flexible.tab.component.scss']\r\n})\r\nexport class FlexibleTabComponent {\r\n\r\n\thovered = false;\r\n\tdynamicComponent: any;\r\n\r\n    @Input(\"selected\")\r\n    public selected = false;\r\n\r\n    @Input(\"title\")\r\n\tpublic title: string;\r\n\t\r\n\t@Input(\"component\")\r\n\tpublic component: any;\r\n\r\n    @Input(\"tabalticon\")\r\n    public tabalticon: string;\r\n\r\n    @Input(\"tabicon\")\r\n    public tabicon: string;\r\n\r\n    @Input(\"template\")\r\n    public template: any;\r\n\r\n    @Input(\"data\")\r\n    public sourceData: any;\r\n\r\n    constructor(\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\tprivate appRef: ApplicationRef,\r\n\t\tprivate injector: Injector,\r\n\t\tprivate host: ElementRef,\r\n\t\tpublic detector: ChangeDetectorRef\r\n\t) {}\r\n\r\n\ttemplateContext() {\r\n\t\treturn {data: this.sourceData };\r\n\t}\r\n\tdynamicallyLoadedComponent() {\r\n\t\tif (this.component) {\r\n\t\t\tif (this.selected) {\r\n\t\t\t\tthis.initializeDynamicComponent();\r\n\t\t\t\tconst instance = (<DynamicTabContentComponent>this.dynamicComponent.instance);\r\n\t\t\t\tthis.host.nativeElement.append((this.dynamicComponent.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement);\r\n\t\t\t\tinstance.data = this.sourceData;\r\n\t\t\t} else if (this.dynamicComponent) {\r\n\t\t\t\tthis.host.nativeElement.innerHTML = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate initializeDynamicComponent() {\r\n\t\tif (!this.dynamicComponent) {\r\n\t\t\tthis.dynamicComponent = this.componentFactoryResolver\r\n\t\t\t\t.resolveComponentFactory(this.component)\r\n\t\t\t\t.create(this.injector);\r\n\r\n\t\t\tthis.appRef.attachView(this.dynamicComponent.hostView);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n@Component({\r\n\tselector: 'flexible-tabs',\r\n\ttemplateUrl: './flexible.tabs.component.html',\r\n\tstyleUrls: ['./flexible.tabs.component.scss']\r\n})\r\nexport class FlexibleTabsComponent implements AfterContentInit  {\r\n\ttabs = [];\r\n\tselectedIndex = -1;\r\n\tisIconified = false;\r\n\tpopped = false;\r\n\r\n\t@ContentChildren(FlexibleTabComponent)\r\n\tchildren: QueryList<FlexibleTabComponent>;\r\n\r\n    @Input(\"position\")\r\n    public position = TabPositions.top;\r\n\r\n    @Input(\"type\")\r\n    public type = TabTypes.tab;\r\n\r\n    @Input(\"pophover\")\r\n    public pophover = false;\r\n\r\n    @Input(\"message\")\r\n    public message = \"click to select tab \";\r\n\r\n\t@Output('onchange')\r\n\tprivate onchange = new EventEmitter();\r\n\r\n    constructor() {}\r\n\r\n\tngAfterContentInit() {\r\n\t\tthis.tabs = [];\r\n\t\tthis.selectedIndex = this.pophover ? -1 : 0;\r\n\t\tthis.isIconified = false;\r\n\r\n\t\tthis.children.forEach((tabInstance, index) => {\r\n\t\t\tif(tabInstance.selected) {\r\n\t\t\t\tthis.selectedIndex = index;\r\n\t\t\t}\r\n\t\t\t\tthis.isIconified = true;\r\n\t\t\tif (tabInstance.tabicon || tabInstance.tabalticon) {\r\n\t\t\t\tthis.isIconified = true;\r\n\t\t\t}\r\n\t\t\tthis.tabs.push(tabInstance);\r\n\t\t});\r\n\t\tif (this.tabs.length) {\r\n\t\t\tthis.selectTab( this.selectedIndex );\r\n\t\t}\r\n\t}\r\n\r\n\tkeyup(event: any) {\r\n        const code = event.which;\r\n\t\t\r\n\t\tif (code === 13) {\r\n\t\t\tevent.target.click();\r\n\t\t}\r\n\t}\r\n\tselectTab(index: number) {\r\n\t\tthis.tabs.map((tab)=>{\r\n\t\t\ttab.selected = false;\r\n\t\t\ttab.hovered = false;\r\n\t\t\ttab.detector.detectChanges();\r\n\t\t});\r\n\t\tif (index > -1) {\r\n\t\t\tthis.tabs[index].selected = true;\r\n\t\t\tthis.tabs[index].detector.detectChanges();\r\n\t\t\tthis.selectedIndex = index;\r\n\t\t\tthis.popped = true;\r\n\t\t\tthis.onchange.emit({\r\n\t\t\t\tselectedIndex: index,\r\n\t\t\t\tselectedTitle: this.tabs[index].title\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thoverTab(index: number, flag: boolean) {\r\n\t\tif (this.pophover) {\r\n\t\t\tthis.tabs.map((tab)=>{\r\n\t\t\t\ttab.hovered = false;\r\n\t\t\t\ttab.detector.detectChanges();\r\n\t\t\t});\r\n\t\t\tif (index > -1){\r\n\t\t\t\tthis.tabs[index].hovered = flag;\r\n\t\t\t\tthis.tabs[index].detector.detectChanges();\r\n\t\t\t}\r\n\t\t\tthis.popped = this.selectedIndex > -1 || flag;\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n* Provides rendering of flexible tabs in a lazy load fashion.\r\n*/\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FlexibleTabsComponent, FlexibleTabComponent } from './flexible.tabs.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        FlexibleTabsComponent,\r\n        FlexibleTabComponent\r\n    ],\r\n    exports: [\r\n        FlexibleTabsComponent,\r\n        FlexibleTabComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class FlexibleTabsModule {}\r\n"]}